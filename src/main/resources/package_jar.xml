<assembly>
    <id>distribution</id>
    <formats>
        <!--指定打包类型：zip、tar、tar.gz、tar.bz2、jar、dir、war-->
        <format>jar</format>
    </formats>
    <!--includeBaseDirectory：指定是否包含打包层目录（比如finalName是output，当值为true，所有文件被放在output目录下，否则直接放在包的根目录下）-->
    <includeBaseDirectory>false</includeBaseDirectory>
    <fileSets>
        <fileSet>
            <directory>${project.basedir}</directory>
            <outputDirectory>\</outputDirectory>
            <includes>
                <include>README*</include>
                <include>LICENSE*</include>
                <include>NOTICE*</include>
            </includes>
        </fileSet>
        <fileSet>
            <directory>${project.build.OutputDirectory}</directory>
            <outputDirectory>\</outputDirectory>
            <includes>
                <!--资源文件需要打入jar包的在这里配置-->
<!--                <include>logback.xml</include>-->
                <!--<include>application.properties</include>-->
            </includes>
        </fileSet>
        <fileSet>
            <!--${project.build.outputDirectory}:项目主代码编译输出目录，默认为target/classes/-->
            <directory>${project.build.OutputDirectory}\com\xgit\kafka</directory>
            <outputDirectory>\com\xgit\kafka</outputDirectory>
        </fileSet>
    </fileSets>
    <!--<dependencySets>-->
        <!--<dependencySet>-->
            <!--&lt;!&ndash;依赖包是否解压&ndash;&gt;-->
            <!--<unpack>true</unpack>-->
            <!--<useProjectArtifact>false</useProjectArtifact>-->
            <!--&lt;!&ndash;<directory>${project.basedir}\src\main\lib\${process.name}</directory>&ndash;&gt;-->
            <!--<outputDirectory>\</outputDirectory>-->
            <!--&lt;!&ndash; 将scope为runtime的依赖包打包到lib目录下。 &ndash;&gt;-->
            <!--<scope>runtime</scope>-->
            <!--&lt;!&ndash;指定jar包，有自己新加的jar包，要在这里指定&ndash;&gt;-->
            <!--<includes>-->
                <!--&lt;!&ndash;动态代理所需依赖&ndash;&gt;-->
                <!--<include>*:*</include>-->
            <!--</includes>-->
        <!--</dependencySet>-->
    <!--</dependencySets>-->
</assembly>